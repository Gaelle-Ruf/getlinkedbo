security:
    # https://symfony.com/doc/current/security/authenticator_manager.html
    enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#c-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
        App\Entity\AdminUser:
            algorithm: auto
        App\Entity\User:
            algorithm: auto
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        app_user_admin_provider:
            entity:
                class: App\Entity\AdminUser
                property: email
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
        all_users:
            chain:
                providers: ['app_user_admin_provider', 'app_user_provider']

    firewalls:
        login:
            pattern: ^/api/login
            stateless: true
            provider: all_users
            json_login:
                check_path: /api/login_check
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

        api:
            pattern:   ^/api
            provider: all_users
            stateless: true
            jwt: ~
            
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            provider: all_users
            security: false
        main:
            lazy: true
            provider: all_users
            custom_authenticator: App\Security\LoginFormAuthenticator
            logout:
                path: app_logout
                # where to redirect after logout
                target: app_any_route

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
        - { path: ^/api/login, roles: PUBLIC_ACCESS }
        - { path: ^/api,       roles: PUBLIC_ACCESS }
